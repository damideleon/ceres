-- Schema for metadata
CREATE SCHEMA meta;

-- Tables for vector embeddings (if needed)
CREATE TABLE meta.embeddings (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL,
    content TEXT NOT NULL,
    embedding VECTOR(384) NOT NULL
);

-- Migration tracking
CREATE TABLE meta.migrations (
    version TEXT PRIMARY KEY,
    name TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Main tables
CREATE TABLE public.people (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    first_name TEXT NOT NULL,
    last_name TEXT,
    type TEXT NOT NULL CHECK (type IN ('customer', 'supplier')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.addresses (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    person_id BIGINT REFERENCES public.people(id),
    address TEXT NOT NULL,
    gps_coordinates TEXT,
    label TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.contacts (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    person_id BIGINT REFERENCES public.people(id),
    network_id SMALLINT REFERENCES social_networks(id),
    value TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE social_networks (
	id SMALLINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    label VARCHAR(80) NULLABLE,
	description VARCHAR(255) NULLABLE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
)

CREATE TABLE public.items (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name TEXT NOT NULL,
    description TEXT,
    price NUMERIC(10,2) NOT NULL,
    available_quantity NUMERIC(10,2) NOT NULL,
    unit_of_measure TEXT,
    type TEXT NOT NULL CHECK (type IN ('ingredient', 'supply', 'product', 'service')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Purchases module
CREATE TABLE public.purchases (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    contact_id BIGINT REFERENCES public.people(id),
    date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    total NUMERIC(10,2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.purchase_items (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    purchase_id BIGINT REFERENCES public.purchases(id),
    item_id BIGINT REFERENCES public.items(id),
    quantity NUMERIC(10,2) NOT NULL,
    purchase_price NUMERIC(10,2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Sales module
CREATE TABLE public.sales (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    total NUMERIC(10,2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.sale_items (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    sale_id BIGINT REFERENCES public.sales(id),
    item_id BIGINT REFERENCES public.items(id),
    quantity NUMERIC(10,2) NOT NULL,
    sale_price NUMERIC(10,2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Orders module
CREATE TABLE public.orders (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    contact_id BIGINT REFERENCES public.people(id),
    date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    total NUMERIC(10,2) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.order_events (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    order_id BIGINT REFERENCES public.orders(id),
    date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    comment TEXT,
    status SMALLINT DEFAULT 1 NOT NULL,
    user_id BIGINT,
    device_id BIGINT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE
);

-- Payments module
CREATE TABLE public.installment_payments (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    item_id BIGINT REFERENCES public.items(id) NOT NULL,
    total_installments NUMERIC NOT NULL,
    paid_installments NUMERIC DEFAULT 0,
    pending_installments NUMERIC GENERATED ALWAYS AS (total_installments - paid_installments) STORED,
    last_payment_date TIMESTAMP WITH TIME ZONE,
    next_payment_date TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Documents module
CREATE TABLE public.documents (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    type TEXT NOT NULL,
    code TEXT NOT NULL,
    data JSON NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.person_documents (
    person_id BIGINT REFERENCES public.people(id) NOT NULL,
    document_id BIGINT REFERENCES public.documents(id) NOT NULL,
    assigned_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL,
    PRIMARY KEY (person_id, document_id)
);

-- Configuration
CREATE TABLE public.configurations (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    provider_id BIGINT REFERENCES public.people(id),
    owner_id BIGINT REFERENCES public.people(id),
    data JSON NOT NULL,
    instance TEXT NOT NULL,
    environment TEXT NOT NULL CHECK (environment IN ('dev', 'prod', 'test')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- People Relationships
CREATE TABLE public.people_relationships (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    primary_person_id BIGINT REFERENCES public.people(id),
    secondary_person_id BIGINT REFERENCES public.people(id),
	relationship_id BIGINT REFERENCES public.relationships(id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Relationships
CREATE TABLE public.relationships (
	id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	name TEXT NOT NULL,
	description TEXT,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- User management
CREATE TABLE public.roles (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.users (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    person_id BIGINT REFERENCES public.people(id) NOT NULL UNIQUE,
    username TEXT UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    last_login_at TIMESTAMP WITH TIME ZONE,
    failed_login_attempts INTEGER DEFAULT 0 NOT NULL,
    lockout_until TIMESTAMP WITH TIME ZONE,
    email_verified_at TIMESTAMP WITH TIME ZONE,
    password_reset_token TEXT,
    password_reset_expires TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

CREATE TABLE public.user_roles (
    user_id BIGINT REFERENCES public.users(id) ON DELETE CASCADE,
    role_id BIGINT REFERENCES public.roles(id) ON DELETE CASCADE,
    assigned_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE public.user_devices (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id BIGINT REFERENCES public.users(id) ON DELETE CASCADE,
    device_token TEXT NOT NULL UNIQUE,
    user_given_name TEXT,
    user_agent TEXT,
    ip_address TEXT,
    registered_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    last_used_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Status codes
CREATE TABLE public.status_codes (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    code TEXT NOT NULL UNIQUE,
    label TEXT NOT NULL,
    model_id TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP WITH TIME ZONE,
    status SMALLINT DEFAULT 1 NOT NULL
);

-- Indexes
CREATE INDEX idx_user_devices_last_used ON public.user_devices (last_used_at);
CREATE INDEX idx_user_devices_user ON public.user_devices (user_id);
CREATE INDEX idx_users_email ON public.users (email);
CREATE INDEX idx_users_username ON public.users (username);